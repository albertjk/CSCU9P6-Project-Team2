import java.awt.Container;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Observable;
import java.util.Observer;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JList;

// Generated by Together


/**
 * An interface to SAAMS:
 * Local Air Traffic Controller Screen:
 * Inputs events from LATC (a person), and displays aircraft information.
 * This class is a controller for the AircraftManagementDatabase: sending it messages to change the aircraft status information.
 * This class also registers as an observer of the AircraftManagementDatabase, and is notified whenever any change occurs in that <<model>> element.
 * See written documentation.
 * @stereotype boundary/view/controller
 * @url element://model:project::SAAMS/design:view:::id15rnfcko4qme4cko4swib
 * @url element://model:project::SAAMS/design:view:::id2fh3ncko4qme4cko4swe5
 * @url element://model:project::SAAMS/design:node:::id15rnfcko4qme4cko4swib.node107
 * @url element://model:project::SAAMS/design:view:::idwwyucko4qme4cko4sgxi
 */
public class LATC extends JFrame implements Observer, ActionListener {
/**
  *  The Local Air Traffic Controller Screen interface has access to the AircraftManagementDatabase.
  * @supplierCardinality 1
  * @clientCardinality 1
  * @label accesses/observes
  * @directed*/
  private AircraftManagementDatabase airDB;
  private JButton landingPermission;
  private JButton confirmLanding;
  private JButton allocateAirSlot;
  private JButton takeOff;
  private JList waitForLanding;
  private JList inTransit;
  private JList awaitTakeoff;
  
  
  public LATC(AircraftManagementDatabase DB) {
	  
	  airDB = DB;
	  DB.addObserver(this);
	  
	  setTitle("LATC UI");
	  setSize(400,400);
	  setResizable(false);
	  setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
	  Container content = getContentPane();
	  content.setLayout(new FlowLayout());
	  
	  
	  
	  
  }

@Override
public void actionPerformed(ActionEvent arg0) {
	// TODO Auto-generated method stub
	
}

@Override
public void update(Observable arg0, Object arg1) {
	// TODO Auto-generated method stub
	
}
  
  
  

}
